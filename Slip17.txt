SLIP 17 import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# Define the stock market data
Stock_Market = {
    'Year': [2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016],
    'Month': [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1],
    'Interest_Rate': [2.75, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.25, 2.25, 2.25, 2, 2, 2, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75],
    'Unemployment_Rate': [5.3, 5.3, 5.3, 5.3, 5.4, 5.6, 5.5, 5.5, 5.5, 5.6, 5.7, 5.9, 6, 5.9, 5.8, 6.1, 6.2, 6.1, 6.1, 6.1, 5.9, 6.2, 6.2, 6.1],
    'Stock_Index_Price': [1464, 1394, 1357, 1293, 1256, 1254, 1234, 1195, 1159, 1167, 1130, 1075, 1047, 965, 943, 958, 971, 949, 884, 866, 876, 822, 704, 719]
}
# Create a DataFrame from the data
df = pd.DataFrame(Stock_Market)  # Convert the dictionary to a pandas DataFrame for easier data manipulation

# Extract the features (independent variable) and target variable (dependent variable)
X = df[['Interest_Rate']]  # Features: Interest rates
y = df['Stock_Index_Price']  # Target variable: Stock index prices

# Create and fit the linear regression model
model = LinearRegression()  # Initialize the linear regression model
model.fit(X, y)  # Fit the model using the feature and target variable

# Predict stock market prices using the trained model
predicted_prices = model.predict(X)  # Generate predicted stock index prices based on interest rates

# Plot the actual and predicted prices against interest rate
plt.figure(figsize=(10, 6))  # Set the figure size for the plot
plt.scatter(X, y, color='blue', label='Actual Prices')  # Scatter plot for actual prices
plt.plot(X, predicted_prices, color='red', label='Predicted Prices')  # Line plot for predicted prices
plt.xlabel('Interest Rate')  # Label for the x-axis
plt.ylabel('Stock Index Price')  # Label for the y-axis
plt.legend()  # Show the legend on the plot
plt.title('Stock Market Price vs. Interest Rate')  # Title of the plot
plt.show()  # Display the plot